name: CI

on:
  push:
    branches: 
      - '*'
      - '*/*'
      - '**'
  schedule: 
    - cron: "0 20 * * 1"

jobs:
  ci_report:
    name: Upload Artifacts
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'schedule' }}
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies and run simulations
        working-directory: ${{runner.workspace}}/test_suite
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          PYTHONPATH=$(pwd) python report_generation/core.py

      - name: Get artifact file name
        id: date
        run: echo ::set-output name=format::$(date +"%m_%d_%Y")
          
      # Archiving results, logs, report
      - name: 'Archive results, logs, report'
        working-directory: ${{runner.workspace}}/test_suite
        run: |
          zip -r report_${{steps.date.outputs.format}} \
            report_generation/files/logs \
            report_generation/files/results \
            report_generation/files/bmdb_models \
            report.txt
      
      - name: Create Release and Upload
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        with:
          tag_name: report_${{steps.date.outputs.format}}
          release_name: report_${{steps.date.outputs.format}}
          draft: false
          prerelease: false
          upload_url_type: application/zip

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./report_${{steps.date.outputs.format}}.zip
          asset_name: report_${{steps.date.outputs.format}}.zip
          asset_content_type: application/zip

  ci_tests:
    name: Run tests
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' }}
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Run Pytests
        working-directory: ${{runner.workspace}}/test_suite
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r tests/requirements.txt
          pytest -v

